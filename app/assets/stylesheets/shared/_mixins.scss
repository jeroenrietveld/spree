@mixin respond-to($media) {
  @if $media == smartphone {
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) { @content; }
  }
  @else if $media == smartphone-l {
    @media only screen and (min-width: 321px) { @content; }
  }
  @else if $media == smartphone-p {
    @media only screen and (max-width: 320px) { @content; }
  }
  @else if $media == iphone5-l {
    @media only screen and (min-width: 568px) and (min-height: 320px) and (max-width: 568px) and (max-height: 320px) { @content; }
  }
  @else if $media == ipad {
    @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) { @content; }
  }
  @else if $media == ipad-l {
    @media only screen and (min-width: 769px) and (orientation: landscape) { @content; }
  }
  @else if $media == ipad-p {
    @media only screen and (min-width: 600px) and (max-width: 768px) and (orientation: portrait) { @content; }
  }
  @else if $media == desktop {
    @media only screen and (min-width: 1224px) { @content; }
  }
  @else if $media == cinema {
    @media only screen and (min-width: 1824px) { @content; }
  }
}

@mixin responsive($breakpoint, $value, $breakpoint2: false, $value2: max-width) {
  @if $breakpoint2 != false {
    @media only screen and ($value: $breakpoint) and ($value2: $breakpoint2) { @content; }
  }
  @else {
    @media only screen and ($value: $breakpoint) { @content; }
  }
}

@mixin image-2x($image, $width: auto, $height: 100%) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

@mixin border($color, $size, $radius, $type: solid) {
  border: $size $type;
  @include border-color($color);
  @include border-radius($radius);
}

@mixin border-color($color, $hue_change: -3deg) {
  border-color: darken(adjust-hue($color, $hue_change), lightness($color) / 6 );
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


@mixin position-center($width) {
	position: absolute;
	left: 50%;
	margin-left: -($width / 2) +px;
}

@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

@mixin font-size($target: 16, $context:16){
  font-size: $target + px; //fallback for old browsers
  font-size: ($target / $context) + em;
}

@mixin text-color($base) {
  @if lightness($base) > 60% { 
    color: lighten(#333, lightness($base) / 5); 

    @if lightness($base) > 90% { text-shadow: #fff 0 1px 0; }
      @else { text-shadow: rgba(#fff, .2 + lightness($base) *.8 / 100) 0 1px 0; }
  }
  @else {
    color: #fff;
    text-shadow: rgba(0, 0, 0, .4) 0 1px 1px;
  }

}

@mixin btn($color) {
  display: inline-block;
  *display: inline; /* IE Hack */
  *zoom: 1; /* IE Hack */
  margin-bottom: 0;
  *margin-left: .3em;
  margin-right: 10px;
  padding: 7px 21px;
  background-repeat: repeat-x;
  line-height: 18px;
  *line-height: 20px;
  text-align: center;
  vertical-align: middle;

  cursor: pointer;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 11px;
  letter-spacing: .2em;
  text-shadow: rgba(0, 0, 0, .4) 0 1px 1px;

  border-width: 1px;
  @include border-radius(3px);
  @include btn-color($color);
}

@mixin btn-color($color, $hue_change: -3deg) {
  @include linear-gradient(adjust-hue($color, $hue_change * 3) + #090909, $color);
  background-color: $color;

  @include text-color($color);
  box-shadow:(inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 0 0 rgba(0, 0, 0, .2));
  border-color: darken(adjust-hue($color, $hue_change), lightness($color) / 6 );

  &:hover {
    @include transition((all .1s linear));
    @include linear-gradient(adjust-hue($color, $hue_change) + #111, $color);
    text-shadow: rgba($color, .2 + lightness($color) *.8 / 100) 0 1px 0;
    background-color: $color;
    box-shadow: (inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 2px 3px rgba(#000, .3 - .25 * lightness($color) / 100));
  }
}

@mixin sticky-footer($footer-height, $root-selector: unquote("#root"), $root-footer-selector: unquote("#root_footer"), $footer-selector: unquote("#footer")) {
	html, body {
    	height: 100%;
	}
  	#{$root-selector} {
    	clear: both;
    	min-height: 100%;
    	height: auto !important;
    	height: 100%;
    	margin-bottom: -$footer-height;
    	
    	#{$root-footer-selector} {
      		height: $footer-height; 
      	}
    }
  	#{$footer-selector} {
    	clear: both;
    	position: relative;
    	height: $footer-height; 
    } 
}

@mixin bottom-footer($footer-height, $center: true, $footer: unquote("#subscribe")) {
	html, body {
    	position: relative;
	}

	#{$footer} {
		position: fixed;
		bottom: 0px;
		left: 0;
		right: 0;
		width: 100%;
		@if $center { @extend %center-block}
	}
}

@mixin placeholder-text($color: lightgrey) {
	::-webkit-input-placeholder {
	   color: $color;
	}

	:-moz-placeholder { /* Firefox 18- */
	   color: $color;  
	}

	::-moz-placeholder {  /* Firefox 19+ */
	   color: $color;  
	}

	:-ms-input-placeholder {  
	   color: $color;  
	}
}